apply plugin: 'java-library'
apply plugin: 'groovy'
apply plugin: "com.diffplug.gradle.spotless"

sourceCompatibility = JavaVersion.VERSION_1_10

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.15.0"
    }
}

repositories {
    jcenter()
}

dependencies {

    implementation 'org.slf4j:slf4j-api:1.7.25' 
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation "org.codehaus.groovy:groovy-all:2.5.3"
    testImplementation "org.spockframework:spock-core:1.2-groovy-2.5"
}

ext.moduleName = 'io.wangler.cartesian'

spotless {
    java {

        target project.fileTree(project.rootDir) {
            include '**/*.java'
            excludes = ['**/generated/**/*.*', '**/generated-sources/**/*.*', '**/wsdl2java/**/*.*']
        }

        googleJavaFormat()
        licenseHeaderFile rootProject.file('LICENSE.txt'), "package "
    }
}

compileJava {
    inputs.property("moduleName", moduleName)
    /*doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }*/
}

test {
    
    inputs.property("moduleName", moduleName)

    testLogging {
        events "passed", "skipped", "failed"
    }

    reports {
        boolean isCI = System.getenv('CI') != null ? true: false
        html.enabled = !isCI
        junitXml.enabled = isCI
    }

    /*doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'ALL-MODULE-PATH',
                '--patch-module', "$moduleName=" + files(sourceSets.test.java.outputDir).asPath,
        ]
        classpath = files()
    }*/
}

jar {
    inputs.property("moduleName", moduleName)
    manifest {
        attributes('Automatic-Module-Name': moduleName)
    }
}